version: '3'
volumes:
  exclude:
  mysqldata:

services:
  nginx:
    image: nginx:alpine
    build:
      context: nginx
      dockerfile: Dockerfile.dev
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/logs:/var/log/nginx

  backend:
    stdin_open: true
    restart: always
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - ./backend:/app/dev
      - ./prisma:/app/dev
      - exclude:/app/dev/node_modules/

  mysql:
    image: mysql:8.0
    platform: linux/x86-64
    tty: true
    env_file: .env
    environment:
      MYSQL_ROOT_HOST: ${DB_ROOT_HOST}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      # MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      TZ: ${TZ}
    ports:
      - ${DB_PORT}:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uuser", "-ppass"]
      timeout: 20s
      retries: 10
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d/:ro
      - ./mysql/logs:/var/log/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysqldata:/var/lib/mysql
    command: mysqld --innodb_use_native_aio=0
